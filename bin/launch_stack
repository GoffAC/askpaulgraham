#!/usr/bin/env bash

# creates and starts up SAM resources in the
# AWS account
# 
# this also bootstraps the summaries and
# questions DynamoDB tables with data from
# the corresponding local exported files

sam deploy --no-confirm-changeset

stack_name=askpaulgraham

stacks_info=$(aws cloudformation describe-stacks --stack-name $stack_name)
stack_outputs=$( jq -r  '.Stacks[0].Outputs' <<< "${stacks_info}" ) 

questions_table_name=$( jq -r 'map(select(.OutputKey == "QuestionsTableName")) | .[0].OutputValue' <<< "${stack_outputs}" )
summaries_table_name=$( jq -r 'map(select(.OutputKey == "SummariesTableName")) | .[0].OutputValue' <<< "${stack_outputs}" )
data_bucket_name=$( jq -r 'map(select(.OutputKey == "DataBucketName")) | .[0].OutputValue' <<< "${stack_outputs}" )
open_ai_api_key=$( jq -r 'map(select(.OutputKey == "OpenAIAPIKey")) | .[0].OutputValue' <<< "${stack_outputs}" )

python3 ./bin/batch_upload.py etc/data/questions_table.json $questions_table_name
python3 ./bin/batch_upload.py etc/data/summaries_table.json $summaries_table_name

config_json=$( jq -n \
	--arg questions_table_name "$questions_table_name" \
	--arg summaries_table_name "$summaries_table_name" \
	--arg data_bucket_name "$data_bucket_name" \
	--arg open_ai_api_key "$open_ai_api_key" \
'{
	"aws": {
		"dynamodb": {
			"questions_table_name": $questions_table_name,
			"summaries_table_name": $summaries_table_name
		},
		"s3": {
			"data_bucket_name": $data_bucket_name
		}
	},
	"open_ai": {
		"api_key": $open_ai_api_key
	}
}'
)

echo $config_json > etc/config/config.json